version: "3.7"
networks:
    # the internal network is a bridge network used by the
    # api container and database
    # We could also bypass this in favor of port fowarding to the host machine and
    # communicating over tcp through the host, but this showcases a way to use docker's internal DNS to
    # resolve networks
    internal:
        name: gatech_internal
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 10.17.0.0/16
services:
    lb:
       image: gatech/loadbalancer
       networks:
           - internal
       ports:
           - "8090:8090"
       depends_on:
           - api
           - api2
    # api holds all of our backend code
    api:
        image: gatech/backend
        networks:
            - internal
        ports:
            - "8091:8080"
        environment:
            # NOTE: db refers to the db service defined below. Docker will automatically resolve this to the container
            - DB_HOST=db
            - DB_USER=postgres
            - DB_PASS=postgres
            - SPRING_STREAMING-DATASOURCE_JDBC-URL=jdbc:postgresql://db:5432/streamingwars
            - SPRING_ARCHIVE-DATASOURCE_JDBC-URL=jdbc:postgresql://db:5432/archive
            - "SPRINGPROFILES=prod,actuator"
        depends_on:
            - db
            - db-archive
        # sleep for 5 seconds to give the db time to boot up
        command: >
            sh -c "sleep 5 &&
               java -jar /streamingwars/streamingwars-0.0.1-SNAPSHOT.jar"			   
    api2:
        image: gatech/backend
        networks:
            - internal
        ports:
            - "8092:8080"
        environment:
            # NOTE: db refers to the db service defined below. Docker will automatically resolve this to the container
            - DB_HOST=db
            - DB_USER=postgres
            - DB_PASS=postgres
            - SPRING_STREAMING-DATASOURCE_JDBC-URL=jdbc:postgresql://db:5432/streamingwars
            - SPRING_ARCHIVE-DATASOURCE_JDBC-URL=jdbc:postgresql://db:5432/archive
            - "SPRINGPROFILES=prod,actuator"
        depends_on:
            - db
            - db-archive
        # sleep for 5 seconds to give the db time to boot up
        command: >
            sh -c "sleep 5 &&
               java -jar /streamingwars/streamingwars-0.0.1-SNAPSHOT.jar"		   

    # site is the container holding all of the front end code
    site:
        image: gatech/frontend
        ports:
            # expose the container's port 80 on the host's 3001
            - "3001:80"
        environment:
           - NGINX_HOST=localhost
           - NGINX_PORT=80
        restart: unless-stopped
        volumes:
         - '.:/my-app'
         - '/my-app/node_modules'
        depends_on:
         - lb
    # db is a postgres instance
    db:
        image: postgres:9.6.12
        networks:
            - internal
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=streamingwars
        ports:
            - "5432:5432"

    db-archive:
        image: postgres:9.6.12
        networks:
            - internal
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=archive
        ports:
            - "5435:5432"

    # prometheus and grafana
    prometheus:
        image: prom/prometheus:v2.24.1
        container_name: 'prometheus'
        volumes:
            - ./monitoring/prometheus/:/etc/prometheus/
        ports:
            - '9090:9090'
        networks:
            - internal
    grafana:
        image: grafana/grafana:5.4.3
        container_name: 'grafana'
        networks:
            - internal
        ports:
            - '3000:3000'
        volumes:
            - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
        env_file:
            - ./monitoring/grafana/config.monitoring
        depends_on:
            - prometheus
